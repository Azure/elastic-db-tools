//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Scripts {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Scripts() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Azure.SqlDatabase.ElasticScale.ShardManagement.Scripts", typeof(Scripts).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- Copyright (c) Microsoft. All rights reserved.
        ///-- Licensed under the MIT license. See LICENSE file in the project root for full license information.
        ///
        ///---------------------------------------------------------------------------------------------------
        ///-- Schema
        ///---------------------------------------------------------------------------------------------------
        ///if schema_id(&apos;__ShardManagement&apos;) is null
        ///begin
        ///	exec sp_executesql N&apos;create schema __ShardManagement&apos;
        ///end
        ///go
        ///
        ///--------------------------- [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CreateShardMapManagerGlobal {
            get {
                return ResourceManager.GetString("CreateShardMapManagerGlobal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- Copyright (c) Microsoft. All rights reserved.
        ///-- Licensed under the MIT license. See LICENSE file in the project root for full license information.
        ///
        ///---------------------------------------------------------------------------------------------------
        ///-- Schema
        ///---------------------------------------------------------------------------------------------------
        ///if schema_id(&apos;__ShardManagement&apos;) is null
        ///begin
        ///	exec sp_executesql N&apos;create schema __ShardManagement&apos;
        ///end
        ///go
        ///
        ///--------------------------- [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CreateShardMapManagerLocal {
            get {
                return ResourceManager.GetString("CreateShardMapManagerLocal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- Copyright (c) Microsoft. All rights reserved.
        ///-- Licensed under the MIT license. See LICENSE file in the project root for full license information.
        ///
        ///---------------------------------------------------------------------------------------------------
        ///-- Stored Procedures
        ///---------------------------------------------------------------------------------------------------
        ///---------------------------------------------------------------------------------------------------
        ///-- Recovery
        ///------------------- [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DropShardMapManagerGlobal {
            get {
                return ResourceManager.GetString("DropShardMapManagerGlobal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- Copyright (c) Microsoft. All rights reserved.
        ///-- Licensed under the MIT license. See LICENSE file in the project root for full license information.
        ///
        ///---------------------------------------------------------------------------------------------------
        ///-- Stored Procedures
        ///---------------------------------------------------------------------------------------------------
        ///
        ///---------------------------------------------------------------------------------------------------
        ///-- Shard Mappings
        ///----------- [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DropShardMapManagerLocal {
            get {
                return ResourceManager.GetString("DropShardMapManagerLocal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- Copyright (c) Microsoft. All rights reserved.
        ///-- Licensed under the MIT license. See LICENSE file in the project root for full license information.
        ///
        ///---------------------------------------------------------------------------------------------------
        ///-- Script to upgrade Global Shard Map from version 0.0 to 1.0
        ///---------------------------------------------------------------------------------------------------
        ///
        ///-- add a column to ShardMapManagerGlobal table to hold SCH-M lock during upgrade
        ///alter ta [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UpgradeShardMapManagerGlobalFrom0_0To1_0 {
            get {
                return ResourceManager.GetString("UpgradeShardMapManagerGlobalFrom0_0To1_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- Copyright (c) Microsoft. All rights reserved.
        ///-- Licensed under the MIT license. See LICENSE file in the project root for full license information.
        ///
        ///---------------------------------------------------------------------------------------------------
        ///-- Script to upgrade Global Shard Map from version 1.0 to 1.1
        ///---------------------------------------------------------------------------------------------------
        ///
        ///-- drop ShardMapManagerGlobal table 
        ///drop table __ShardManagement.ShardMapManagerGlobal
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UpgradeShardMapManagerGlobalFrom1_0To1_1 {
            get {
                return ResourceManager.GetString("UpgradeShardMapManagerGlobalFrom1_0To1_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- Copyright (c) Microsoft. All rights reserved.
        ///-- Licensed under the MIT license. See LICENSE file in the project root for full license information.
        ///
        ///---------------------------------------------------------------------------------------------------
        ///-- Script to upgrade Global Shard Map from version 1.1 to 1.2
        ///-- Fix for VSTS# 3410606
        ///---------------------------------------------------------------------------------------------------
        ///
        ///-- drop extra objects from version 1.1
        ///
        ///if object_id(N&apos;__Shard [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UpgradeShardMapManagerGlobalFrom1_1To1_2 {
            get {
                return ResourceManager.GetString("UpgradeShardMapManagerGlobalFrom1_1To1_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- Copyright (c) Microsoft. All rights reserved.
        ///-- Licensed under the MIT license. See LICENSE file in the project root for full license information.
        ///
        ///---------------------------------------------------------------------------------------------------
        ///-- Script to upgrade Global Shard Map from version 1000.0 to 1000.1
        ///---------------------------------------------------------------------------------------------------
        ///
        ///-- drop extra column from ShardMapManagerGlobal table which was added as first step  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UpgradeShardMapManagerGlobalFrom1000_0To1000_1 {
            get {
                return ResourceManager.GetString("UpgradeShardMapManagerGlobalFrom1000_0To1000_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- Copyright (c) Microsoft. All rights reserved.
        ///-- Licensed under the MIT license. See LICENSE file in the project root for full license information.
        ///
        ///---------------------------------------------------------------------------------------------------
        ///-- Script to upgrade Local Shard Map from version 0.0 to 1.0
        ///---------------------------------------------------------------------------------------------------
        ///
        ///-- add a column to ShardMapManagerLocal table to hold SCH-M lock during upgrade
        ///alter tabl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UpgradeShardMapManagerLocalFrom0_0To1_0 {
            get {
                return ResourceManager.GetString("UpgradeShardMapManagerLocalFrom0_0To1_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- Copyright (c) Microsoft. All rights reserved.
        ///-- Licensed under the MIT license. See LICENSE file in the project root for full license information.
        ///
        ///---------------------------------------------------------------------------------------------------
        ///-- Script to upgrade Local Shard Map from version 1.0 to 1.1
        ///---------------------------------------------------------------------------------------------------
        ///
        ///-- drop ShardMapManagerLocal table 
        ///drop table __ShardManagement.ShardMapManagerLocal
        ///
        ///- [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UpgradeShardMapManagerLocalFrom1_0To1_1 {
            get {
                return ResourceManager.GetString("UpgradeShardMapManagerLocalFrom1_0To1_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- Copyright (c) Microsoft. All rights reserved.
        ///-- Licensed under the MIT license. See LICENSE file in the project root for full license information.
        ///
        ///---------------------------------------------------------------------------------------------------
        ///-- Script to upgrade Local Shard Map from version 1.1 to 1.2
        ///---------------------------------------------------------------------------------------------------
        ///
        ///-- drop extra objects from version 1.1
        ///
        ///if object_id(N&apos;__ShardManagement.spUpdateShardLoc [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UpgradeShardMapManagerLocalFrom1_1To1_2 {
            get {
                return ResourceManager.GetString("UpgradeShardMapManagerLocalFrom1_1To1_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- Copyright (c) Microsoft. All rights reserved.
        ///-- Licensed under the MIT license. See LICENSE file in the project root for full license information.
        ///
        ///---------------------------------------------------------------------------------------------------
        ///-- Script to upgrade Local Shard Map from version 1000.0 to 1000.1
        ///---------------------------------------------------------------------------------------------------
        ///
        ///-- drop extra column from ShardMapManagerLocal table which was added as first step to [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UpgradeShardMapManagerLocalFrom1000_0To1000_1 {
            get {
                return ResourceManager.GetString("UpgradeShardMapManagerLocalFrom1000_0To1000_1", resourceCulture);
            }
        }
    }
}
